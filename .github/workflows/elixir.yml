name: Elixir CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    name: Build
    runs-on: ubuntu-latest

    env:
      MIX_ENV: 'test'

    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: '1.11.0' # Define the elixir version [required]
          otp-version: '23.1.4' # Define the OTP version [required]
      - name: Restore dependencies and build cache
        uses: actions/cache@v2
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies
        run: mix deps.get
      - name: Build
        run: mix compile
    
  test:

    name: Test
    runs-on: ubuntu-latest
    needs: build

    env:
      MIX_ENV: 'test'
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # for coveralls

    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: '1.11.0' # Define the elixir version [required]
          otp-version: '23.1.4' # Define the OTP version [required]
      - name: Restore dependencies and build cache
        uses: actions/cache@v2
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Start dependency
        uses: harmon758/postgresql-action@v1
        with:
          postgresql version: '11'
          postgresql db: "webcam_fornolo_test"
          postgresql user: "user"
          postgresql password: "pass"
      - name: Run tests
        run: mix coveralls.github --trace

  deploy:

    name: Deploy to Heroku
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.8.9
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          branch: "master"
